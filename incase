#include "utils.hpp"
#include "query.hpp"
#include <unistd.h>
#include "student.hpp"

size_t safe_read(int fd, void* buffer, size_t nbytes) {
  ssize_t nbytes_read = read(fd, buffer, nbytes);
  if (nbytes_read < 0) {
    perror("read error: ");
    exit(1);
  }
  return (size_t)nbytes_read;
}

size_t safe_write(int fd, const void* buffer, size_t nbytes) {
  ssize_t bytes_written = write(fd, buffer, nbytes);
  if (bytes_written < 0) {
    perror("write: ");
    exit(1);
  }
  return (size_t)bytes_written;
}

void log_query(query_result_t* result) {
  char buffer[512];
  if (result->status == QUERY_SUCCESS) {
    char filename[512];
    char type[256];
    cout << result->query << " hehe" <<  endl;
    strcpy(type, result->query.c_str());// Changement sur result->query
    type[6] = '\0';
    sprintf(filename, "logs/%ld-%s.txt", result->start_ns, type);
    printf("%s\n", filename);
    FILE* f = fopen(filename, "w");
    float duration = (float)(result->end_ns - result->start_ns) / 1.0e6;
    sprintf(buffer, "Query \"%s\" completed in %fms with %ld results.\n", result->query.c_str(), duration, result->lsize); // Changement sur result->query
    if (f == NULL){
    cout<<result->end_ns<<endl;}
    fwrite(buffer, sizeof(char), strlen(buffer), f);// f est NULL donc seg fault acause du f
    

    if (result->lsize > 0) {
      for (size_t i = 0; i < result->lsize; i++) { // Changement sur type de i etait int devenu size_t
        student_to_str(buffer, &result->students[i]);
        fwrite(buffer, sizeof(char), strlen(buffer), f);
        fwrite("\n", sizeof(char), 1, f);
      }
    }
    fclose(f);
  } else if (result->status == UNRECOGNISED_FIELD) {
    fprintf(stderr, "Unrecognized field in query %s\n", result->query.c_str());
  }
}

